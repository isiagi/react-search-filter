{"version":3,"sources":["components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","placeholder","data","useState","searchWord","setSearchWord","filterData","setFilterData","className","type","value","onChange","event","target","newFilter","filter","title","toLowerCase","includes","length","id","onClick","slice","map","key","href","link","App","Data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"00sBAoDeA,MA/Cf,YAAyC,IAArBC,EAAoB,EAApBA,YAAaC,EAAO,EAAPA,KAAO,EACAC,mBAAS,IADT,mBAC7BC,EAD6B,KACjBC,EADiB,OAEAF,mBAAS,IAFT,mBAE7BG,EAF6B,KAEjBC,EAFiB,KAsBpC,OACI,sBAAKC,UAAU,SAAf,UACI,sBAAKA,UAAU,eAAf,UACI,uBAAOC,KAAK,OAAOC,MAAON,EAAYH,YAAaA,EAAaU,SArBvD,SAACC,GAClBP,EAAcO,EAAMC,OAAOH,OAC3B,IAAMI,EAAYZ,EAAKa,QAAO,SAACL,GAC3B,OAAOA,EAAMM,MAAMC,cAAcC,SAASd,EAAWa,kBAIrDV,EADc,KAAfH,EACe,GAEJU,MAaN,qBAAKN,UAAU,aAAf,SAC2B,IAAtBF,EAAWa,OAAe,cAAC,IAAD,IAAiB,cAAC,IAAD,CAAWC,GAAG,cAAcC,QAVrE,WACfd,EAAc,IACdF,EAAc,YAYgB,IAAtBC,EAAWa,QACV,qBAAKX,UAAU,cAAf,SACAF,EAAWgB,MAAM,EAAG,IAAIC,KAAI,SAACb,EAAOc,GACjC,OAEI,aADA,CACA,KAAGhB,UAAU,WAAWiB,KAAMf,EAAMgB,KAAMb,OAAO,SAAjD,SACG,4BAAIH,EAAMM,mB,QC5BtBW,MARf,WACE,OACE,qBAAKnB,UAAU,MAAf,SACE,cAAC,EAAD,CAAWP,YAAa,aAAcC,KAAM0B,OCGnCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a2829f9f.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport './SearchBar.css'\n\nfunction SearchBar({placeholder, data}) {\n    const [searchWord, setSearchWord] = useState('')\n    const [filterData, setFilterData] = useState([])\n\n    const handleFilter = (event) => {\n        setSearchWord(event.target.value)\n        const newFilter = data.filter((value) => {\n            return value.title.toLowerCase().includes(searchWord.toLowerCase())\n        })\n\n        if(searchWord === \"\"){\n            setFilterData([])\n        }else{\n        setFilterData(newFilter)\n        }\n    }\n\n    const clearInput = () => {\n        setFilterData([])\n        setSearchWord(\"\")\n    }\n\n    return (\n        <div className=\"search\">\n            <div className=\"searchInputs\">\n                <input type=\"text\" value={searchWord} placeholder={placeholder} onChange={handleFilter}/>\n                <div className=\"searchIcon\">\n                    {filterData.length === 0 ? <SearchIcon /> : <CloseIcon id=\"clearButton\" onClick={clearInput}/>}\n                </div>\n            </div>\n            {\n                filterData.length !== 0 &&\n                (<div className=\"dataResults\">\n                {filterData.slice(0, 15).map((value, key) => {\n                    return(\n                        // eslint-disable-next-line react/jsx-no-target-blank\n                        <a className=\"dataItem\" href={value.link} target=\"_blank\">\n                           <p>{value.title}</p> \n                        </a>\n                    )\n                })}\n            </div>)\n            }\n        </div>\n    )\n}\n\nexport default SearchBar\n","import React from 'react'\nimport './App.css'\nimport SearchBar from './components/SearchBar'\n\nimport Data from './Data.json'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SearchBar placeholder={'Enter text'} data={Data}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}